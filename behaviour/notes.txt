Overall structure:
    main.py is the president.
    It runs the vision and passes the vision data into planner.py as well as tell the planner to do its job.

    planner.py is the vice-president.
    The whole plannig and robot communication goes through here.
    The planner figures out what is the agents belief state based on world data from vision.
    Then, it calls strategy.py to decide what actions to perform.
    For example, the planner tells the strategy the positions of everything and that we should be defending

    strategy.py is responsible for designing the high-level actions.
    For example, if it is told to defend,
        it will calculate the goal position the robot and call utilities.py to move the control the robot.

    utilities.py is responsible for desinging the low-level actions.
    If we are told to move, utilitites will call robotCommunications to move the robot.
    If we are told to move from A to B, utilities will calculate how and pass it to robotCommunications.

TODO:
    The arduino code is not up-to-date and so isnt the robotCommunications.py
    After this is done, utilities need to be adjusted accordingly.

    Test and probably improve moveFromTo() in utilities
    
    Enable and improve Align() in strategy.py/Milestone2Def. Probably want to align robots angle, not position.

    Test and probably improve Milestone2Pass

    Design other features needed for milestone 2.


To block sideways instead of straight, change line 80 in strategy.py: type_of_movement = 'straight'